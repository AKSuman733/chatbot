cache:
  key: "$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME"
  paths:
    - $HOME/.m2/

before_script:
  - mkdir -p $HOME/.m2/

stages:
#  - test
  - package
  - deploy

#maven-test:
#  image: maven:3.3-jdk-8
#  stage: test
#  script:
#    - mvn clean test $ENV_TEST -Dtest=Runner
#
docker-build-stage:
  image: docker:latest
  stage: package
  except:
    - master
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker build -t registry.gitlab.com/$CI_PROJECT_NAMESPACE/chatbot:staging .
    - docker push registry.gitlab.com/$CI_PROJECT_NAMESPACE/chatbot:staging

docker-build:
  image: docker:latest
  stage: package
  only:
    - master
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker build -t registry.gitlab.com/$CI_PROJECT_NAMESPACE/chatbot:latest .
    - docker push registry.gitlab.com/$CI_PROJECT_NAMESPACE/chatbot:latest

deploy-staging:
  image: rastasheep/ubuntu-sshd
  stage: deploy
  except:
      - master
  environment:
    name: staging
    url: http://akswnc9.aksw.uni-leipzig.de:1983
  script:
    - mkdir ~/.ssh
    - echo "$AKSW_KEY" > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa
    - ssh -o StrictHostKeyChecking=no -tt $AKSW_USERNAME@$AKSW_HOST "echo $AKSW_PASSWORD | sudo -S ./deploy_chatbot $CI_BUILD_TOKEN $CI_PROJECT_NAMESPACE staging"

deploy:
  image: rastasheep/ubuntu-sshd
  stage: deploy
  only:
    - master
  environment:
    name: production
    url: http://akswnc9.aksw.uni-leipzig.de:1984
  script:
    - mkdir ~/.ssh
    - echo "$AKSW_KEY" > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa
    - ssh -o StrictHostKeyChecking=no -tt $AKSW_USERNAME@$AKSW_HOST "echo $AKSW_PASSWORD | sudo -S ./deploy_chatbot $CI_BUILD_TOKEN $CI_PROJECT_NAMESPACE production"
